#+title: So you want to see my dotfiles ehhh?
#+author: Kevin Rangel

[[https://github.com/hlissner/doom-emacs][https://img.shields.io/badge/Made_with-Doom_Emacs-blueviolet.svg?style=flat-square&logo=GNU%20Emacs&logoColor=white]]
[[https://nixos.org][https://img.shields.io/badge/NixOS-v23.05-blue.svg?style=flat-square&logo=NixOS&logoColor=white]]

| *Shell*    | zsh           |
| *WM*       | bspwm         |
| *Editor*   | Doom Emacs    |
| *Terminal* | st            |
| *Launcher* | dmenu         |
| *Browser*  | firefox       |

* Naming Scheme
** Workstations
** [[https://github.com/venikx/homelab][Servers]]

* Structure
#+begin_src shell :shebang "#!/usr/bin/env nix-shell\n#!nix-shell -i bash --pure -p tree" :results output :exports results
tree -d -I 'apple-silicon-support|firmware'
#+end_src

#+RESULTS:
#+begin_example
.
|-- bin
|-- hosts
|   |-- aarch64-darwin
|   |   `-- lucid
|   |-- aarch64-linux
|   |   `-- air
|   |-- x86_64-linux
|   |   |-- earth
|   |   `-- limber-lt-kdb
|   `-- x86_64-windows
|       `-- nightmare
`-- modules
    |-- audio
    |-- darwin
    |-- desktop
    |-- home-manager
    |   |-- cli
    |   |-- desktop
    |   |   |-- backgrounds
    |   |   |-- dmenu
    |   |   |-- dunst
    |   |   `-- higan
    |   |-- dev
    |   |-- editors
    |   |   |-- doom
    |   |   `-- nvim
    |   `-- services
    |-- nixos
    `-- services

30 directories
#+end_example

* Installation
** 1. Launch the NixOS minimal ISO
- Yoink the latest stable build of [[https://nixos.org/][NixOS]]
- Boot into the installer

** 2. Verify the internet connection
Skip the following if an ethernet cable is already plugged in

#+begin_src shell :eval no
sudo -i
systemctl start wpa_supplicant

wpa_cli
> add_network
> set_network 0 ssid "myssid"
> set_network 0 psk "mypassword"
> set_network 0 key_mgmt WPA-PSK
> enable_network 0
#+end_src

Test the internet connection with ~ping www.google.com~

** 3. Loading the NixOS config onto the new machine
*** Use nixos-anywhere to install machine remotely (x86-64 only)
The `nixos-anywhere` can be used to install the device via an ssh connection.
This is not recommended if you are dual-booting.

If it's a new device you need to make sure the location of
hardware-configuration is imported, but doesn't exist yet.

Please, make sure the drive of the disko-config is adjusted to the drive seen
from running ~lsblk~.

#+begin_src sh :eval no
nix run github:nix-community/nixos-anywhere -- --generate-hardware-config \
    nixos-generate-config \
    ./hosts/<platform>/<hostname>/hardware-configuration.nix \
    --flake .#hostname root@<ip address>
#+end_src

*** Use [[https://github.com/nix-community/disko/blob/master/docs/quickstart.md][disko]] to format the drives (for any other platforms)
Copy the disk information to the installer. And adjust the drive of
~disko-config.nix~ with drive from running ~lsblk~.

#+begin_src sh :eval no
cd /tmp
curl https://raw.githubusercontent.com/nix-community/disko/master/example/hybrid.nix -o /tmp/disk-config.nix
#+end_src

Use disko to partition the drive.
#+begin_src sh :eval no
sudo nix --experimental-features "nix-command flakes" run \
    github:nix-community/disko/latest -- --mode disko /tmp/disko-config.nix

#+end_src

Double-check the drives are properly mounted, and run the installer.
#+begin_src sh :eval no
mount | grep /mnt
nixos-generate-config --no-filesystems --root /mnt
mv /tmp/disko-config.nix /mnt/etc/nixos/hosts/<platform>/<hostname>/disko-config.nix
nixos-install
#+end_src

** 4. Almost there!
- run ~reboot~
- change the passwords for the user(s)
- [[https://media.giphy.com/media/yJFeycRK2DB4c/giphy.gif]]
